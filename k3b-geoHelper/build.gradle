// subproject k3b-geoHelper
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'signing'

// vvv maven upload stuff
group = "com.github.${githubUserId}"
description = "k3b-geoHelper"
archivesBaseName = "k3b-geoHelper"

version = globalVersion

print description + ":" + version + "\n"
// ^^^ maven upload stuff

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

dependencies {
    // compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.11'
    testCompile 'org.slf4j:slf4j-simple:1.7.7@jar'
    // testCompile fileTree(dir: 'resources', include: ['*.*'])
    compile 'org.slf4j:slf4j-api:1.7.7@jar'
    //  compile 'org.slf4j:slf4j-api:1.7.6@jar'
    // compile 'com.darwinsys:hirondelle-date4j:1.5.1'
    // compile 'joda-time:joda-time:2.7'
}

task testZip(type: Zip, dependsOn: [test, jacocoTestReport]) {
    group = 'Distribution'
    classifier = 'tests'
    description = "Builds -${classifier} archive containing testresults and codecoverage ."

    from('src/dist') {
        // include 'changelog.txt'
    }

    from ('build/reports/tests' ) {
        into 'tests'
    }

    from ('build/reports/jacoco/test/html' ) {
        into 'codecoverage'
    }
}

task reports (dependsOn: [test, jacocoTestReport, javadoc])

// workaround because android-studio does not make the test resources available
// see https://code.google.com/p/android/issues/detail?id=64887#c13
task copyTestResources(type: Copy) {
    from sourceSets.test.resources
    into sourceSets.test.output.classesDir
}
processTestResources.dependsOn copyTestResources

apply from: '../uploadArchives.gradle'
